{"version":3,"sources":["components/Movie.js","routes/Home.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","src","alt","slice","map","index","Home","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wSA4EeA,MAnEf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAGI,UAAU,iBAAb,UAA+BH,EAAQM,MAAM,EAAG,KAAhD,SACA,oBAAIH,UAAU,gBAAd,SACKD,EAAOK,KAAI,SAACL,EAAQM,GACjB,OACI,oBAAgBL,UAAU,eAA1B,SACKD,GADIM,eCuCtBC,G,kNAlDXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAIZC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IAAI,4DALZ,gBAGQJ,EAHR,EAEJK,KACIA,KAAQL,OAGhB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAN3B,2C,uDAUZ,WACIQ,KAAKN,c,oBAIT,WAAU,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,yBAAST,UAAU,YAAnB,SACKQ,EACG,qBAAKR,UAAU,SAAf,SACI,sBAAMA,UAAU,eAAhB,0BAGJ,qBAAKA,UAAU,SAAf,SACKS,EAAOL,KAAI,SAAAa,GAAK,OACb,cAAC,EAAD,CAEIC,GAAID,EAAMC,GACVtB,KAAMqB,EAAMrB,KACZD,MAAOsB,EAAMtB,MACbE,QAASoB,EAAMpB,QACfC,OAAQmB,EAAME,mBACdpB,OAAQkB,EAAMlB,QANTkB,EAAMC,e,GAlCxBE,IAAMC,Y,MC+GVC,MAnGf,WACE,OAAO,cAAC,EAAD,KCfTC,IAASC,OAAQ,cAAE,EAAF,IAAYC,SAASC,eAAe,W","file":"static/js/main.360eb792.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// css 임포트\nimport './Movie.css';\n// Link 컴포넌트 넣기\n// import { Link } from 'react-router-dom';\n\n\n// 7주차까지의 코드\nfunction Movie({ title, year, summary, poster, genres }) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n                <ul className=\"movie__genres\">\n                    {genres.map((genres, index) => {\n                        return (\n                            <li key={index} className=\"movie__genre\">\n                                {genres}\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\n\nMovie.propTypes = {\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\n\n// 영화카드에 Link 컴포넌트 반영 + movie-detail 경로 확인 + Detail 컴포넌트 구성하기\n// function Movie({ title, year, summary, poster, genres }) {\n//     return (\n//         <div className=\"movie\">\n//             <Link to={{ pathname: '/movie-detail', state: { year, title, summary, poster, genres }}}>\n//                 <img src={poster} alt={title} title={title} />\n//                 <div className=\"movie__data\">\n//                     <h3 className=\"movie__title\">{title}</h3>\n//                     <h5 className=\"movie__year\">{year}</h5>\n//                     <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n//                     <ul className=\"movie__genres\">\n//                         {genres.map((genres, index) => {\n//                             return (\n//                                 <li key={index} className=\"movie__genre\">\n//                                     {genres}\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n//             </Link>\n//         </div>\n//     );\n// }\n\n\n// Movie.propTypes = {\n//     year: PropTypes.number.isRequired,\n//     title: PropTypes.string.isRequired,\n//     summary: PropTypes.string.isRequired,\n//     poster: PropTypes.string.isRequired,\n//     genres: PropTypes.arrayOf(PropTypes.string).isRequired\n// };\n\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\n// Movie 컴포넌트의 경로를 수정하여 임포트\nimport Movie from '../components/Movie';\n// App.css 대신 Home.css 임포트\nimport './Home.css';\n\n//클래스 명 수정 (App -> Home)\nclass Home extends React.Component {\n    state = {\n        isLoading: true,\n        movies: []\n    };\n\n\n    getMovies = async () => {\n        const {\n            data: {\n                data: { movies }\n            }\n        } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n        this.setState({ movies, isLoading: false });\n    };\n\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n\n    render() {\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        {movies.map(movie => (\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\n\n\nexport default Home;","import React from 'react';\n// Movie 컴포넌트 대신 Home 컴포넌트 임포트 \nimport Home from './routes/Home';\nimport './App.css';\n// // HashRouter와 Route 임포트\n// import { HashRouter, Route } from 'react-router-dom';\n// // About 컴포넌트 임포트 \n// import About from './routes/About';\n// // Home 컴포넌트 재임포트\n// import Home from './routes/Home';\n// // Navigation 컴포넌트 임포트\n// import Navigation from './components/Navigation';\n// // Detail 컴포넌트 임포트\n// import Detail from './routes/Detail';\n\n\n// App에 있었던 클래스 컴포넌트를 Home 컴포넌트로 모두 이동하기\n// Home 컴포넌트를 만들어주었기 때문에, App 컴포넌트는 다시 함수형 기본 형태로 수정\n// App 컴포넌트에선 Home 컴포넌트를 호출하고, Home 컴포넌트에서 Movie 컴포넌트를 호출하는 형태로 변경된 상태\n\nfunction App() {\n  return <Home />;\n}\n\n\n// 라우터 만들기 (경로확인 : http://localhost:3000/#/)\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route />\n//     </HashRouter>\n//   );\n// }\n\n\n// Route 컴포넌트에서 path, component props 추가하기 + About 컴포넌트 작성해주기 (About.js)\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n\n// 또다른 Route 컴포넌트에 Home 컴포넌트 부분 추가하기 + 경로확인 : http://localhost:3000/#/about\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/\" component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n\n// 문제 해결을 위해 라우터 동작 살펴보기\n// http://localhost:3000/#/이후경로\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/home\">\n//         <h1>Home</h1>\n//       </Route>\n//       <Route path=\"/home/introduction\">\n//         <h1>introduction</h1>\n//       </Route>\n//       <Route path=\"/about\">\n//         <h1>About</h1>\n//       </Route>\n//     </HashRouter>\n//   );\n// }\n\n\n// exact props 추가하기 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n\n// About 컴포넌트 정리 + About.js 에 className 반영하기 + About.css 작성하기 \n\n\n// Navigation 컴포넌트 사용 + 에러 확인 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Navigation />\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n// Navigation 컴포넌트 정리 (Link to 컴포넌트 쓰기) + Navigation.js 에 className 반영하기 + Navigation.css 작성하기 \n\n// Detail 컴포넌트를 Route 컴포넌트에서 반영하기 + 콘솔에서 로그 확인 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Navigation />\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//       <Route path=\"/movie-detail\" component={Detail} />\n//     </HashRouter>\n//   );\n// }\n\n\n// movie-detail로 직접 접근하는 경우 받아올 데이터가 없음 -> 이럴 때 리다이렉트 처리하기\n// route props의 history 키 활용\n// Detail 컴포넌트를 클래스형 컴포넌트로 바꾸기\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; //내가만든 app.js에서 가져올거야\n\n//브라우저가 그릴 수 있게 렌더함수 갖다쓰자. \n//앱 컴퍼넌트 가지고 와서, html 파일의 getElementByID 아이디가 루트인 엘리먼트 가져와서, 렌더링할거야.\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(); //이걸 왜 숨겨야 나오는지?"],"sourceRoot":""}