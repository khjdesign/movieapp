{"ast":null,"code":"import React from'react';// css 임포트\nimport'./Movie.css';// Link 컴포넌트 넣기\n// import { Link } from 'react-router-dom';\n// 7주차까지의 코드\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Movie(_ref){var title=_ref.title,year=_ref.year,summary=_ref.summary,poster=_ref.poster,genres=_ref.genres;return/*#__PURE__*/_jsxs(\"div\",{className:\"movie\",children:[/*#__PURE__*/_jsx(\"img\",{src:poster,alt:title,title:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie__data\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"movie__title\",children:title}),/*#__PURE__*/_jsx(\"h5\",{className:\"movie__year\",children:year}),/*#__PURE__*/_jsxs(\"p\",{className:\"movie__summary\",children:[summary.slice(0,180),\"...\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"movie__genres\",children:genres.map(function(genres,index){return/*#__PURE__*/_jsx(\"li\",{className:\"movie__genre\",children:genres},index);})})]})]});}// 영화카드에 Link 컴포넌트 반영 + movie-detail 경로 확인 + Detail 컴포넌트 구성하기\n// function Movie({ title, year, summary, poster, genres }) {\n//     return (\n//         <div className=\"movie\">\n//             <Link to={{ pathname: '/movie-detail', state: { year, title, summary, poster, genres }}}>\n//                 <img src={poster} alt={title} title={title} />\n//                 <div className=\"movie__data\">\n//                     <h3 className=\"movie__title\">{title}</h3>\n//                     <h5 className=\"movie__year\">{year}</h5>\n//                     <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n//                     <ul className=\"movie__genres\">\n//                         {genres.map((genres, index) => {\n//                             return (\n//                                 <li key={index} className=\"movie__genre\">\n//                                     {genres}\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n//             </Link>\n//         </div>\n//     );\n// }\n// Movie.propTypes = {\n//     year: PropTypes.number.isRequired,\n//     title: PropTypes.string.isRequired,\n//     summary: PropTypes.string.isRequired,\n//     poster: PropTypes.string.isRequired,\n//     genres: PropTypes.arrayOf(PropTypes.string).isRequired\n// };\nexport default Movie;","map":{"version":3,"sources":["/Users/KAKAO/Desktop/reactProject/movieapp/src/8/src/components/Movie.js"],"names":["React","Movie","title","year","summary","poster","genres","slice","map","index"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,aAAP,CACA;AACA;AAGA;wFACA,QAASC,CAAAA,KAAT,MAAyD,IAAxCC,CAAAA,KAAwC,MAAxCA,KAAwC,CAAjCC,IAAiC,MAAjCA,IAAiC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,MAAU,MAAVA,MAAU,CACrD,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,YAAK,GAAG,CAAED,MAAV,CAAkB,GAAG,CAAEH,KAAvB,CAA8B,KAAK,CAAEA,KAArC,EADJ,cAEI,aAAK,SAAS,CAAC,aAAf,wBACI,WAAI,SAAS,CAAC,cAAd,UAA8BA,KAA9B,EADJ,cAEI,WAAI,SAAS,CAAC,aAAd,UAA6BC,IAA7B,EAFJ,cAGI,WAAG,SAAS,CAAC,gBAAb,WAA+BC,OAAO,CAACG,KAAR,CAAc,CAAd,CAAiB,GAAjB,CAA/B,SAHJ,cAII,WAAI,SAAS,CAAC,eAAd,UACKD,MAAM,CAACE,GAAP,CAAW,SAACF,MAAD,CAASG,KAAT,CAAmB,CAC3B,mBACI,WAAgB,SAAS,CAAC,cAA1B,UACKH,MADL,EAASG,KAAT,CADJ,CAKH,CANA,CADL,EAJJ,GAFJ,GADJ,CAmBH,CAYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,cAAeR,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// css 임포트\nimport './Movie.css';\n// Link 컴포넌트 넣기\n// import { Link } from 'react-router-dom';\n\n\n// 7주차까지의 코드\nfunction Movie({ title, year, summary, poster, genres }) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n                <ul className=\"movie__genres\">\n                    {genres.map((genres, index) => {\n                        return (\n                            <li key={index} className=\"movie__genre\">\n                                {genres}\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\n\nMovie.propTypes = {\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\n\n// 영화카드에 Link 컴포넌트 반영 + movie-detail 경로 확인 + Detail 컴포넌트 구성하기\n// function Movie({ title, year, summary, poster, genres }) {\n//     return (\n//         <div className=\"movie\">\n//             <Link to={{ pathname: '/movie-detail', state: { year, title, summary, poster, genres }}}>\n//                 <img src={poster} alt={title} title={title} />\n//                 <div className=\"movie__data\">\n//                     <h3 className=\"movie__title\">{title}</h3>\n//                     <h5 className=\"movie__year\">{year}</h5>\n//                     <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n//                     <ul className=\"movie__genres\">\n//                         {genres.map((genres, index) => {\n//                             return (\n//                                 <li key={index} className=\"movie__genre\">\n//                                     {genres}\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n//             </Link>\n//         </div>\n//     );\n// }\n\n\n// Movie.propTypes = {\n//     year: PropTypes.number.isRequired,\n//     title: PropTypes.string.isRequired,\n//     summary: PropTypes.string.isRequired,\n//     poster: PropTypes.string.isRequired,\n//     genres: PropTypes.arrayOf(PropTypes.string).isRequired\n// };\n\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}