{"ast":null,"code":"import React from'react';// Movie 컴포넌트 대신 Home 컴포넌트 임포트 \nimport Home from'./routes/Home';import'./App.css';// // HashRouter와 Route 임포트\n// import { HashRouter, Route } from 'react-router-dom';\n// // About 컴포넌트 임포트 \n// import About from './routes/About';\n// // Home 컴포넌트 재임포트\n// import Home from './routes/Home';\n// // Navigation 컴포넌트 임포트\n// import Navigation from './components/Navigation';\n// // Detail 컴포넌트 임포트\n// import Detail from './routes/Detail';\n// App에 있었던 클래스 컴포넌트를 Home 컴포넌트로 모두 이동하기\n// Home 컴포넌트를 만들어주었기 때문에, App 컴포넌트는 다시 함수형 기본 형태로 수정\n// App 컴포넌트에선 Home 컴포넌트를 호출하고, Home 컴포넌트에서 Movie 컴포넌트를 호출하는 형태로 변경된 상태\nimport{jsx as _jsx}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(Home,{});}// 라우터 만들기 (경로확인 : http://localhost:3000/#/)\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route />\n//     </HashRouter>\n//   );\n// }\n// Route 컴포넌트에서 path, component props 추가하기 + About 컴포넌트 작성해주기 (About.js)\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n// 또다른 Route 컴포넌트에 Home 컴포넌트 부분 추가하기 + 경로확인 : http://localhost:3000/#/about\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/\" component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n// 문제 해결을 위해 라우터 동작 살펴보기\n// http://localhost:3000/#/이후경로\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/home\">\n//         <h1>Home</h1>\n//       </Route>\n//       <Route path=\"/home/introduction\">\n//         <h1>introduction</h1>\n//       </Route>\n//       <Route path=\"/about\">\n//         <h1>About</h1>\n//       </Route>\n//     </HashRouter>\n//   );\n// }\n// exact props 추가하기 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n// About 컴포넌트 정리 + About.js 에 className 반영하기 + About.css 작성하기 \n// Navigation 컴포넌트 사용 + 에러 확인 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Navigation />\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n// Navigation 컴포넌트 정리 (Link to 컴포넌트 쓰기) + Navigation.js 에 className 반영하기 + Navigation.css 작성하기 \n// Detail 컴포넌트를 Route 컴포넌트에서 반영하기 + 콘솔에서 로그 확인 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Navigation />\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//       <Route path=\"/movie-detail\" component={Detail} />\n//     </HashRouter>\n//   );\n// }\n// movie-detail로 직접 접근하는 경우 받아올 데이터가 없음 -> 이럴 때 리다이렉트 처리하기\n// route props의 history 키 활용\n// Detail 컴포넌트를 클래스형 컴포넌트로 바꾸기\nexport default App;","map":{"version":3,"sources":["/Users/KAKAO/Desktop/reactProject/movieapp/src/8/src/App.js"],"names":["React","Home","App"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,MAAO,WAAP,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;2CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,mBAAO,KAAC,IAAD,IAAP,CACD,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA,cAAeA,CAAAA,GAAf","sourcesContent":["import React from 'react';\n// Movie 컴포넌트 대신 Home 컴포넌트 임포트 \nimport Home from './routes/Home';\nimport './App.css';\n// // HashRouter와 Route 임포트\n// import { HashRouter, Route } from 'react-router-dom';\n// // About 컴포넌트 임포트 \n// import About from './routes/About';\n// // Home 컴포넌트 재임포트\n// import Home from './routes/Home';\n// // Navigation 컴포넌트 임포트\n// import Navigation from './components/Navigation';\n// // Detail 컴포넌트 임포트\n// import Detail from './routes/Detail';\n\n\n// App에 있었던 클래스 컴포넌트를 Home 컴포넌트로 모두 이동하기\n// Home 컴포넌트를 만들어주었기 때문에, App 컴포넌트는 다시 함수형 기본 형태로 수정\n// App 컴포넌트에선 Home 컴포넌트를 호출하고, Home 컴포넌트에서 Movie 컴포넌트를 호출하는 형태로 변경된 상태\n\nfunction App() {\n  return <Home />;\n}\n\n\n// 라우터 만들기 (경로확인 : http://localhost:3000/#/)\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route />\n//     </HashRouter>\n//   );\n// }\n\n\n// Route 컴포넌트에서 path, component props 추가하기 + About 컴포넌트 작성해주기 (About.js)\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n\n// 또다른 Route 컴포넌트에 Home 컴포넌트 부분 추가하기 + 경로확인 : http://localhost:3000/#/about\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/\" component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n\n// 문제 해결을 위해 라우터 동작 살펴보기\n// http://localhost:3000/#/이후경로\n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/home\">\n//         <h1>Home</h1>\n//       </Route>\n//       <Route path=\"/home/introduction\">\n//         <h1>introduction</h1>\n//       </Route>\n//       <Route path=\"/about\">\n//         <h1>About</h1>\n//       </Route>\n//     </HashRouter>\n//   );\n// }\n\n\n// exact props 추가하기 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n\n// About 컴포넌트 정리 + About.js 에 className 반영하기 + About.css 작성하기 \n\n\n// Navigation 컴포넌트 사용 + 에러 확인 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Navigation />\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//     </HashRouter>\n//   );\n// }\n\n// Navigation 컴포넌트 정리 (Link to 컴포넌트 쓰기) + Navigation.js 에 className 반영하기 + Navigation.css 작성하기 \n\n// Detail 컴포넌트를 Route 컴포넌트에서 반영하기 + 콘솔에서 로그 확인 \n// function App() {\n//   return (\n//     <HashRouter>\n//       <Navigation />\n//       <Route path=\"/\" exact={true} component={Home} />\n//       <Route path=\"/about\" component={About} />\n//       <Route path=\"/movie-detail\" component={Detail} />\n//     </HashRouter>\n//   );\n// }\n\n\n// movie-detail로 직접 접근하는 경우 받아올 데이터가 없음 -> 이럴 때 리다이렉트 처리하기\n// route props의 history 키 활용\n// Detail 컴포넌트를 클래스형 컴포넌트로 바꾸기\n\nexport default App;"]},"metadata":{},"sourceType":"module"}